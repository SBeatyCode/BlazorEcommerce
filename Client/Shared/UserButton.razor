@using BlazorEcommerce.Client.Services.CartService;
@inject ILocalStorageService LocalStorage
@inject ICartService CartService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<div class="dropdown">
	<button class="btn btn-secondary dropdown-toggle user-button" 
		@onclick="ToggleUserMenu" @onfocusout="HideUserMenu">
		<i class="oi oi-person"></i>
	</button>
	<div class="dropdown-menu dropdown-menu-right @UserMenuCssClass">
		<AuthorizeView>
			<Authorized>
				<a href="profile" class="dropdown-item">Profile</a>
				<a href="orders" class="dropdown-item">Orders</a>
				<hr />
				<button class="dropdown-item" @onclick="LogOut">Log Out</button>
			</Authorized>
			<NotAuthorized>
				<a href="login?returnUrl=@NavigationManager.ToBaseRelativePath(NavigationManager.Uri)" class="dropdown-item">LogIn</a>
				<a href="register" class="dropdown-item">Register</a>
				<AdminMenu />
			</NotAuthorized>
		</AuthorizeView>

	</div>
</div>

@code {
	private bool showUserMenu = false;

	private string UserMenuCssClass => showUserMenu ? "show-menu" : "";

	private void ToggleUserMenu()
	{
		showUserMenu = !showUserMenu;
	}

	private async Task HideUserMenu()
	{
		//Delay ensures that ther navigation works properly
		await Task.Delay(200);
		showUserMenu = false;
	}

	private async Task LogOut()
	{
		await CartService.StoreCartItems(false);
		await CartService.UpdateCartItemCount();
		await LocalStorage.RemoveItemAsync("authToken");
		await AuthenticationStateProvider.GetAuthenticationStateAsync();
		NavigationManager.NavigateTo("");
	}
}
