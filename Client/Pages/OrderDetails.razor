@page "/orders/{OrderId:int}"
@using BlazorEcommerce.Client.Services.OrderService;
@using BlazorEcommerce.Shared.DTOs;
@inject IOrderService OrderService

@if(orderDetails == null)
{
	<span>No Order Details Available</span>
}
else
{
	<h3>Order from @orderDetails.OrderDate</h3>

	<div>
		@foreach (var item in orderDetails.Products)
		{
			<div class="container">
				<div class="image-wrapper">
					<img src="@item.ImageUrl" class="image">
				</div>
				<div class="name">
					<h5><a href="/product/@item.ProductId">@item.ProductName</a></h5>
					<span>@item.ProductTypeName</span> <br/>
					<span>@item.Quantity</span>
				</div>
				<div class="product-price">
					$@item.TotalPrice
				</div>
			</div>
		}
		<div class="product-price">
			Order Total: $@orderDetails.TotalPrice
		</div>
	</div>
}

@code {
	[Parameter]
	public int OrderId { get; set; }

	OrderDetailsResponse? orderDetails = null;

	protected async override Task OnInitializedAsync()
	{
		orderDetails = await OrderService.GetOrderDetails(OrderId);
	}
}
