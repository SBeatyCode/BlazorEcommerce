@page "/admin/product-types"
@using BlazorEcommerce.Client.Services.ProductTypeService;
@inject IProductTypeService ProductTypeService
@implements IDisposable
@attribute [Authorize(Roles="Admin")]

<h3>ProductTypes</h3>

@foreach(ProductType productType in ProductTypeService.ProductTypes)
{
	@if(productType.Editing)
	{
		<EditForm Model="editingProductType" OnSubmit="UpdateProductType">
			<div class="row">
				<div class="col">
					<InputText @bind-Value="editingProductType.Name" class="form-control"></InputText>
				</div>
				<div class="col">
					<button type="submit" class="btn btn-primary">
						<i class="oi oi-cloud-upload"></i> Save Changes
					</button>
					<button class="btn btn-primary" @onclick="StopEditing">
						<i class="oi oi-circle-x"></i> Cancel
					</button>
				</div>
			</div>
		</EditForm>
	}
	else
	{
		<div class="row">
			<div class="col">
				@productType.Name
			</div>
			<div class="col">
				<button class="btn btn-primary" @onclick="() => EditProductType(productType)">
					<i class="oi oi-pencil"></i> Edit
				</button>
			</div>
		</div>
	}

	<button class="btn btn-primary" @onclick="CreateNewProductType">
		<i class="oi oi-plus"></i> Add New Product Type
	</button>
}

@code {
	ProductType? editingProductType = null;

	protected override async Task OnInitializedAsync()
	{
		await ProductTypeService.GetProductTypes();
		ProductTypeService.OnChange += StateHasChanged;
	}

	public void Dispose()
	{
		ProductTypeService.OnChange -= StateHasChanged;
	}

	private void EditProductType(ProductType productType)
	{
		productType.Editing = true;
		editingProductType = productType;
	}

	private void StopEditing()
	{
		editingProductType = null;
	}

	private void CreateNewProductType()
	{
		editingProductType = ProductTypeService.CreateNewProductType();
	}

	private async Task UpdateProductType()
	{
		if(editingProductType != null)
		{
			if (editingProductType.IsNew)
				await ProductTypeService.AddProductType(editingProductType);
			else
				await ProductTypeService.UpdateProductType(editingProductType);

			editingProductType = null;
		}
	}
}
